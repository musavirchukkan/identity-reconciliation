# Production-optimized Dockerfile
FROM node:18-alpine AS base

# Install security updates and essential tools
RUN apk update && apk upgrade && \
    apk add --no-cache \
        dumb-init \
        curl \
        ca-certificates && \
    rm -rf /var/cache/apk/*

# Create app directory and non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S bitespeed -u 1001 -G nodejs

WORKDIR /app

# Install dependencies stage
FROM base AS dependencies

# Copy package files
COPY package*.json ./
COPY prisma ./prisma/

# Install all dependencies
RUN npm ci --include=dev

# Build stage
FROM dependencies AS build

# Copy source code
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Build the application
RUN npm run build

# Remove dev dependencies
RUN npm prune --production

# Production stage
FROM base AS production

# Set production environment
ENV NODE_ENV=production
ENV PORT=3000

# Security: Don't run as root
USER bitespeed

# Copy only necessary files from build stage
COPY --from=build --chown=bitespeed:nodejs /app/dist ./dist
COPY --from=build --chown=bitespeed:nodejs /app/node_modules ./node_modules
COPY --from=build --chown=bitespeed:nodejs /app/prisma ./prisma
COPY --from=build --chown=bitespeed:nodejs /app/package*.json ./

# Expose port
EXPOSE 3000

# Add labels for container metadata
LABEL maintainer="developer@bitespeed.com" \
      version="1.0.0" \
      description="Bitespeed Identity Reconciliation Service - Production" \
      org.opencontainers.image.title="Bitespeed Identity Reconciliation" \
      org.opencontainers.image.description="Identity reconciliation service for linking customer contacts" \
      org.opencontainers.image.vendor="Bitespeed" \
      org.opencontainers.image.version="1.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/app.js"]